{"ast":null,"code":"var _jsxFileName = \"/Users/amitmungare/Amit/myProject/ReactLearning/react-routing/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"data.message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Events;\nexport default Events;\nexport const loader = async () => {\n  const response = await fetch('http://localhost:8080/eventsdfs');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events'\n    };\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Events","_s","data","isError","children","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","message","$RefreshReg$"],"sources":["/Users/amitmungare/Amit/myProject/ReactLearning/react-routing/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction Events() {\n\n  const data = useLoaderData();\n\n  if(data.isError){\n    return <p>data.message</p>\n  }\n  const events = data.events;\n\n  return (\n    <EventsList events={events} />\n  );\n}\n\nexport default Events;\n\nexport const loader = async ()=>{\n  const response = await fetch('http://localhost:8080/eventsdfs');\n\n  if (!response.ok) {\n    return {isError: true, message: 'Could not fetch events'}\n  } else {\n    return response\n  }\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,IAAGM,IAAI,CAACC,OAAO,EAAC;IACd,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;EACA,MAAMC,MAAM,GAAGP,IAAI,CAACO,MAAM;EAE1B,oBACEV,OAAA,CAACF,UAAU;IAACY,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAElC;AAACP,EAAA,CAZQD,MAAM;EAAA,QAEAJ,aAAa;AAAA;AAAAc,EAAA,GAFnBV,MAAM;AAcf,eAAeA,MAAM;AAErB,OAAO,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAU;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAE/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACX,OAAO,EAAE,IAAI;MAAEY,OAAO,EAAE;IAAwB,CAAC;EAC3D,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF,CAAC;AAAA,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}