{"ast":null,"code":"var _jsxFileName = \"/Users/amitmungare/Amit/myProject/ReactLearning/react-routing/frontend/src/pages/NewEvent.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEvent = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEvent;\nexport default NewEvent;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    return json({\n      message: \"Could not save events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["React","EventForm","jsxDEV","_jsxDEV","NewEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","json","message","status","$RefreshReg$"],"sources":["/Users/amitmungare/Amit/myProject/ReactLearning/react-routing/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm'\n\nconst NewEvent = () => {\n  return (\n    <EventForm/>\n  )\n}\n\nexport default NewEvent\n\nexport async function action({ request, params}){\n\n  const data = await request.formData()\n\n  const eventData = {\n    title: data.get( 'title'), \n    image: data.get('image'), \n    date: data.get('date'), \n    description: data.get ('description'),\n  }\n\n  const response = await fetch('http://localhost:8080/events',{\n    method:'POST',\n    headers:{\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify(eventData)\n  })\n  if (!response.ok) {\n    return json({ message: \"Could not save events\" }, { status: 500 });\n  } else {\n    return response;\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEhB,CAAC;AAAAC,EAAA,GAJKL,QAAQ;AAMd,eAAeA,QAAQ;AAEvB,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAE9C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAE,OAAO,CAAC;IACzBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAE,aAAa;EACtC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IAC1DC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,OAAOC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE,CAAC,MAAM;IACL,OAAOV,QAAQ;EACjB;AACF;AAAC,IAAAZ,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}