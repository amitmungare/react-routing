{"ast":null,"code":"var _jsxFileName = \"/Users/amitmungare/Amit/myProject/ReactLearning/react-routing/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Event id \", params.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    return json({\n      message: \"Could not fetch details for seleted event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","params","children","fileName","_jsxFileName","lineNumber","columnNumber","eventId","_c","loader","request","id","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["/Users/amitmungare/Amit/myProject/ReactLearning/react-routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst EventDetail = () => {\n\n    const params = useParams();\n\n  return (\n    <>\n        <h1>Event Details</h1>\n        <p> Event id {params.eventId}</p>\n    </>\n  )\n}\n\nexport default EventDetail\n\nexport async function loader({ request, params}){\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\"+id);\n  if (!response.ok) {\n    return json({ message: \"Could not fetch details for seleted event\" }, { status: 500 });\n  } else {\n    return response;\n  }\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAE5B,oBACEE,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBV,OAAA;MAAAM,QAAA,GAAG,YAAU,EAACD,MAAM,CAACM,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACnC,CAAC;AAEP,CAAC;AAAAN,EAAA,CAVKD,WAAW;EAAA,QAEEL,SAAS;AAAA;AAAAc,EAAA,GAFtBT,WAAW;AAYjB,eAAeA,WAAW;AAE1B,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAET;AAAM,CAAC,EAAC;EAC9C,MAAMU,EAAE,GAAGV,MAAM,CAACM,OAAO;EACzB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACF,EAAE,CAAC;EAChE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA4C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACxF,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF;AAAC,IAAAJ,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}